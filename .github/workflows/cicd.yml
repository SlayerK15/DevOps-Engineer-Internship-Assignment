name: CI/CD (Build → Push → Compose down/up)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: slayerop15
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & push frontend
        run: |
          docker build -t slayerop15/frontend:latest ./frontend
          docker push slayerop15/frontend:latest

      - name: Build & push backend
        run: |
          docker build -t slayerop15/backend:latest ./backend
          docker push slayerop15/backend:latest

  deploy_to_ec2:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
        -   name: Add SSH key
            run: |
                install -m 600 -D /dev/stdin ~/.ssh/id_rsa <<'EOF'
                ${{ secrets.EC2_SSH_KEY_PEM }}
                EOF
                printf "Host *\n  StrictHostKeyChecking no\n" >> ~/.ssh/config

        -   name: Wait for Docker Hub tag propagation
            run: sleep 45

        -   name: Create docker-compose.yml locally (images only)
            run: |
                cat > docker-compose.yml <<'YAML'
                version: "3.9"
                services:
                mongo:
                    image: mongo:6
                    restart: unless-stopped
                    volumes:
                    - mongo_data:/data/db

                backend:
                    image: slayerop15/backend:latest
                    restart: unless-stopped
                    environment:
                    MONGO_URL: mongodb://mongo:27017/dd_db
                    NODE_ENV: production
                    depends_on:
                    - mongo

                frontend:
                    image: slayerop15/frontend:latest
                    restart: unless-stopped
                    depends_on:
                    - backend
                    ports:
                    - "80:80"

                volumes:
                mongo_data:
                YAML

        -   name: Copy compose to EC2
            run: |
                ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "sudo mkdir -p /srv/app && sudo chown \$USER:\$USER /srv/app"
                scp -i ~/.ssh/id_rsa docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/srv/app/docker-compose.yml

        -   name: Deploy (install docker if needed → pull → down → up -d)
            run: |
                ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
                set -euo pipefail

                # Install Docker & Compose if missing
                if ! command -v docker >/dev/null 2>&1; then
                    sudo apt-get update -y
                    sudo apt-get install -y docker.io docker-compose-plugin
                    sudo systemctl enable --now docker
                fi

                cd /srv/app
                sudo docker compose pull
                sudo docker compose down --remove-orphans   # no -v -> keeps mongo_data
                sudo docker compose up -d
                sudo docker ps
                '
